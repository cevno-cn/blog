<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>sitemap</title>
    <link href="/2020-02-26/sitemap/"/>
    <url>/2020-02-26/sitemap/</url>
    
    <content type="html"><![CDATA[<p>使用npm安装适用于百度的自动生成sitemap.xml文件的插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-baidu-sitemap --save &#x2F;&#x2F;安装适用于百度的自动生成sitemap.xml文件的插件</span><br></pre></td></tr></table></figure><p>在hexo根目录配置文件中添加下列字段</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">baidusitemap:</span><br><span class="line">    path: baidusitemap.xml</span><br></pre></td></tr></table></figure><p>这样在执行<code>hexo g</code>生成静态文件的时候，会在public目录下生成baidusitemap.xml文件，则表示安装成功</p><p>sitemap.xml文件的作用就是给百度蜘蛛爬取数据用的</p><p>sitemap.xml文件又被称为“网站地图”</p>]]></content>
    
    
    
    <tags>
      
      <tag>sitemap</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>评论功能开启了，欢迎交流</title>
    <link href="/2020-02-20/%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E5%BC%80%E5%90%AF%E4%BA%86%EF%BC%8C%E6%AC%A2%E8%BF%8E%E4%BA%A4%E6%B5%81/"/>
    <url>/2020-02-20/%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E5%BC%80%E5%90%AF%E4%BA%86%EF%BC%8C%E6%AC%A2%E8%BF%8E%E4%BA%A4%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<p>博客评论功能开启了</p><p>使用valine评论系统</p><p>欢迎大家来评论</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>valine</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的博客史</title>
    <link href="/2020-02-18/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%8F%B2/"/>
    <url>/2020-02-18/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%8F%B2/</url>
    
    <content type="html"><![CDATA[<p>你好！欢迎访问我的博客！</p><p>在之前搭建过很多的博客，最终都因那些博客模板的可扩展性不够好、不够美观等各种原因，没能继续使用。</p><p>我还自己写过一些静态博客，但是实际运行起来太复杂了，原理就是写一个首页，然后文章单独放在一个位置，写好一个文章就够复杂的了，写文章也只有手工打代码，并且写完之后，发布上去，还需要手动修改首页内容，我感觉这样的博客虽然是自己写的，有最高的权限，但是很low。</p><p>知道我发现了hexo博客框架，我发现原来博客还能这么玩。</p><p>hexo的优点不必我多说，大家应该都有所耳闻。</p><p>刚一开始我是把博客存放到码云上的，但是最终我用了GitHub…原因就不说了，大家都懂-_-</p><p>以后不出意外的话，也将继续使用hexo写博客，分享我的生活。</p><p>别的也不说了，我们一起进步吧 //^_^//</p><h5 id="我的旧博客"><a href="#我的旧博客" class="headerlink" title="我的旧博客"></a>我的旧博客</h5><h6 id="1-Old-Blog"><a href="#1-Old-Blog" class="headerlink" title="1. Old Blog"></a>1. <a href="http://ganto.top" target="_blank" rel="external nofollow noopener noreferrer">Old Blog</a></h6><h6 id="2-码云Blog"><a href="#2-码云Blog" class="headerlink" title="2. 码云Blog"></a>2. <a href="https://ganto_blog.gitee.io/blog" target="_blank" rel="external nofollow noopener noreferrer">码云Blog</a></h6>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决无法访问GitHub</title>
    <link href="/2020-02-18/%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AEGitHub/"/>
    <url>/2020-02-18/%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AEGitHub/</url>
    
    <content type="html"><![CDATA[<h2 id="国内用户无法访问GitHub解决办法"><a href="#国内用户无法访问GitHub解决办法" class="headerlink" title="国内用户无法访问GitHub解决办法"></a>国内用户无法访问GitHub解决办法</h2><h6 id="进入电脑此路径C-Windows-System32-drivers-etc，用记事本打开hosts文件，在后面添加一下字段"><a href="#进入电脑此路径C-Windows-System32-drivers-etc，用记事本打开hosts文件，在后面添加一下字段" class="headerlink" title="进入电脑此路径C:\Windows\System32\drivers\etc，用记事本打开hosts文件，在后面添加一下字段"></a>进入电脑此路径C:\Windows\System32\drivers\etc，用记事本打开hosts文件，在后面添加一下字段</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.30.253.112 github.com</span><br></pre></td></tr></table></figure><p>添加完成后，保存即可</p><p>因为修改的C盘文件，可能需要管理员权限</p><p>如果被电脑管家检测到风险，选择信任即可！</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo博客从0到部署</title>
    <link href="/2020-02-18/hexo%E5%8D%9A%E5%AE%A2%E4%BB%8E0%E5%88%B0%E9%83%A8%E7%BD%B2/"/>
    <url>/2020-02-18/hexo%E5%8D%9A%E5%AE%A2%E4%BB%8E0%E5%88%B0%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="第一步：我们首先要安装node-js和git"><a href="#第一步：我们首先要安装node-js和git" class="headerlink" title="第一步：我们首先要安装node.js和git"></a>第一步：我们首先要安装node.js和git</h2><p>因为hexo是基于<code>node.js</code>，所以比较依赖于<code>node.js</code>把md文件生成静态文件html。</p><p>我们是利用<code>git</code>进行对hexo项目操作的，包括把文章部署到码云/github。</p><p>所以首先要安装<code>node.js</code>、<code>git</code></p><h2 id="第二步：安装并生成hexo默认文件"><a href="#第二步：安装并生成hexo默认文件" class="headerlink" title="第二步：安装并生成hexo默认文件"></a>第二步：安装并生成hexo默认文件</h2><h4 id="1-安装hexo"><a href="#1-安装hexo" class="headerlink" title="1. 安装hexo"></a>1. 安装hexo</h4><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><p>首先创建一个文件夹为blog，我们右键使用Git Bash Here打开。</p><p>直接运行下方代码，使用 npm进行安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>安装结束后，我们通过以下命令查看版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure><p>如果出现一下文字，则证明安装hexo成功，这里打印出了各种依赖环境的版本号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Windows_NT 10.0.18363 win32 x64</span><br><span class="line">node: 12.14.1</span><br><span class="line">v8: 7.7.299.13-node.16</span><br><span class="line">uv: 1.33.1</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.15.0</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.40.0</span><br><span class="line">napi: 5</span><br><span class="line">llhttp: 2.0.1</span><br><span class="line">http_parser: 2.8.0</span><br><span class="line">openssl: 1.1.1d</span><br><span class="line">cldr: 35.1</span><br><span class="line">icu: 64.2</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 12.1</span><br></pre></td></tr></table></figure><h4 id="2-新建所需的文件"><a href="#2-新建所需的文件" class="headerlink" title="2. 新建所需的文件"></a>2. 新建所需的文件</h4><p>安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm init myblog &#x2F;&#x2F; 新建所需要的文件</span><br><span class="line">$ cd myblog &#x2F;&#x2F; 进入myblog</span><br><span class="line">$ npm install &#x2F;&#x2F; 同步配置文件</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：在使用<code>$ npm init</code>命令的时候有概率会出现配置环境的问题</p><p>启动hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>然后我们就可以使用 localhost:4000 访问了！</p><h2 id="部署到码云-github"><a href="#部署到码云-github" class="headerlink" title="部署到码云/github"></a>部署到码云/github</h2><h4 id="码云准备工作"><a href="#码云准备工作" class="headerlink" title="码云准备工作"></a>码云准备工作</h4><p>首先我们需要有一个码云账户</p><p>然后创建一个仓库</p><p>创建仓库的时候一定要选择 <strong><em>使用Readme文件初始化这个仓库</em></strong></p><p>然后进入仓库点击<strong>克隆/下载</strong>，复制<strong>https</strong>地址，如：<a href="https://gitee.com/XXX/XXX.git" target="_blank" rel="external nofollow noopener noreferrer">https://gitee.com/XXX/XXX.git</a></p><h4 id="部署github"><a href="#部署github" class="headerlink" title="部署github"></a>部署github</h4><p>部署到github和部署到码云上一样，这里就不多叙述</p><h4 id="配置-config-yml文件"><a href="#配置-config-yml文件" class="headerlink" title="配置_config.yml文件"></a>配置_config.yml文件</h4><p>打开配置文件，拉到最后，找到<strong>deploy</strong>，这样配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;gitee.com&#x2F;XXX&#x2F;XXX.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>如果要同时部署到码云/github，可以这样配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: </span><br><span class="line">    coding: https:&#x2F;&#x2F;gitee.com&#x2F;xxx&#x2F;xxx.git,master</span><br><span class="line">    duapp: https:&#x2F;&#x2F;github.com&#x2F;xxx&#x2F;xxx.github.io.git,master</span><br></pre></td></tr></table></figure><p>一点要注意规范，<code>type:</code> <code>repo:</code> <code>branch:</code>后一定要空一格</p><p>然后我们要注意配置文件中的<strong>root:</strong></p><p>默认是<strong>root: /</strong>，我们要修改成<strong>root: <a href="https://ganto_blog.gitee.io/blog/" target="_blank" rel="external nofollow noopener noreferrer">https://ganto_blog.gitee.io/blog/</a></strong>或者<strong>root: /blog/</strong></p><h4 id="提交代码到码云-github仓库"><a href="#提交代码到码云-github仓库" class="headerlink" title="提交代码到码云/github仓库"></a>提交代码到码云/github仓库</h4><p>首先安装 hexo-deployer-git，这是一个插件包，用于提交代码到<strong>码云</strong> / <strong>github</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>执行成功后，会在文件夹中多出一个<strong>.deploy_git</strong>文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>这时会弹出账号密码框，这里的账号密码是码云的账号密码，注意别把名字当成账号，账号一般都是手机号或者邮箱地址</p><p>成功提交代码后，我们会在码云仓库看到我们提交的代码</p><h2 id="搭建后出现的一系列问题"><a href="#搭建后出现的一系列问题" class="headerlink" title="搭建后出现的一系列问题"></a>搭建后出现的一系列问题</h2><ol><li><p>码云Gitee Pages 普通版，每次提交代码后，都需要手动更新 Pages 服务（重启 Pages 服务），可以免费使用一个月pro版，坑</p></li><li><p>在博客中有时候加载jQuery包的路径无法访问，我们需要修改jQuery包路径，这个问题好像只有默认landscape主题有,如果真的存在这种问题的话，可以进入themes\landscape\layout_partial，找到after-footer.ejs打开，把引用的包改成其他可以访问的即可，不可以改成http地址包</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;jquery&#x2F;3.4.1&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于JavaScript中常用方法的整理</title>
    <link href="/2020-02-15/%E5%85%B3%E4%BA%8EJavaScript%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E7%9A%84%E6%95%B4%E7%90%86/"/>
    <url>/2020-02-15/%E5%85%B3%E4%BA%8EJavaScript%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E7%9A%84%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="SPLICE"><a href="#SPLICE" class="headerlink" title="SPLICE"></a>SPLICE</h2><p>splice的用法有很多，主要是对<strong>数组</strong>进行操作，下面一一分析</p><p>splice向数组中添加/删除元素：</p><p><font color="#2ab2ab">添加</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var fruits &#x3D; [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</span><br><span class="line">fruits.splice(2,0,&quot;Lemon&quot;,&quot;Kiwi&quot;);</span><br></pre></td></tr></table></figure><p>数组fruits输出结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Banana,Orange,Lemon,Kiwi,Apple,Mango</span><br></pre></td></tr></table></figure><p>splice(2,0,”Lemon”,”Kiwi”)的意思是，在数组下标为2的位置插入Lemon、Kiwi，其中0的意思是不删除原本下标为2的元素Apple，而是将插入的元素从下标2开始插入原本位置的元素往后走</p><p><font color="#2ab2ab">删除</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var arr &#x3D; [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;];</span><br><span class="line">fruits.splice(2,2);</span><br></pre></td></tr></table></figure><p>数组arr输出结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1,2,5</span><br></pre></td></tr></table></figure><p><strong>注意:</strong> splice的返回值是被他删除的元素，这个返回值对我来说很重要，很good</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3,4</span><br></pre></td></tr></table></figure><h5 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h5><ul><li>splice() 方法用于添加或删除数组中的元素。</li><li><strong>注意:</strong> 这种方法会改变原始数组。</li></ul><h2 id="SPLIT"><a href="#SPLIT" class="headerlink" title="SPLIT"></a>SPLIT</h2><p>split主要作用于<strong>字符串</strong>，我们常用split分割字符串成为数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var s &#x3D; &quot;123 456&quot;;</span><br><span class="line">var t &#x3D; s.split(&#39;&#39;);</span><br></pre></td></tr></table></figure><p>split的返回值(变量t的值)是一个数组</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot; &quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;]</span><br></pre></td></tr></table></figure><p>split的参数可以是空格，也可以是某个特定的字符，也可以为空，为空的话就会把每个字符包括空格都分开，进而转化成数组</p><p><strong>注意:</strong> 空格(“ “)和空(“”)不一样</p><p>split可以写两个参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var s &#x3D; &quot;123 456&quot;;</span><br><span class="line">var t &#x3D; s.split(&#39;&#39;,3);</span><br></pre></td></tr></table></figure><p>split的返回值结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]</span><br></pre></td></tr></table></figure><p>split(‘’,3)其中3可以这么理解，是split将字符串转化成为数组后，只返回三个数组长度的值，这里的3不是下标，可以理解为数组长度</p><h2 id="SLICE"><a href="#SLICE" class="headerlink" title="SLICE"></a>SLICE</h2><p><font color="#2ab2ab">slice在数组中读取元素、在字符串中截取</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var s &#x3D; [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;];</span><br><span class="line">var t &#x3D; s.slice(2,3);</span><br></pre></td></tr></table></figure><p>slice返回结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;3&quot;]</span><br></pre></td></tr></table></figure><p>slice(2,3)参数是从数组下标为2读取到下标为3，其中‘包前不包后’，就是读取出下标为2的元素，但不读取下标为3的元素</p><p>slice一个参数表示，从当前下标读取到最后，如<code>slice(2)</code></p><p><font color="#2ab2ab">字符串和数组类似，可以直接参考上方代码</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 代码参考上方</span><br></pre></td></tr></table></figure><p><font color="#2ab2ab">slice参数为负值时</font></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var s &#x3D; [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;];</span><br><span class="line">var t &#x3D; s.slice(-2,-1);</span><br></pre></td></tr></table></figure><p>slice返回结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&quot;4&quot;]</span><br></pre></td></tr></table></figure><p>我们可以这么理解slice(-2,-1),符号相当于反方向，意思就是从数组或者字符串反方向读取，即: 从下标为1读取到下标为2，规则遵循‘包前不包后’，这里的前后是反方向中的前后</p><h2 id="SUBSTRING"><a href="#SUBSTRING" class="headerlink" title="SUBSTRING"></a>SUBSTRING</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">string.substring(from, to)</span><br></pre></td></tr></table></figure><p>substring() 方法用于提取字符串中介于两个指定下标之间的字符</p><p>且依然遵循‘包前不包后’</p><p>如果只包含一个参数，依然是截取到最后</p><h2 id="SUBSTR"><a href="#SUBSTR" class="headerlink" title="SUBSTR"></a>SUBSTR</h2><p>substr() 抽取指定数目的字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var s &#x3D; &quot;123 456&quot;;</span><br><span class="line">var t &#x3D; s.substr(2,5);</span><br></pre></td></tr></table></figure><p>substr返回结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 456</span><br></pre></td></tr></table></figure><p>substr(2,5) 可以理解为从下标2开始（包含下标为2的字符）提取字符5个字符</p><p>如果substr只包含一个参数，依然是提取到最后</p><h2 id="TOSTRING"><a href="#TOSTRING" class="headerlink" title="TOSTRING"></a>TOSTRING</h2><p>toString() 将Date 对象转换为字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var s &#x3D; new Date();</span><br><span class="line">console.log(s,typeof s);</span><br><span class="line">var t &#x3D; s.toString();</span><br><span class="line">console.log(t,typeof t);</span><br></pre></td></tr></table></figure><p>console.log() 打印结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sat Feb 15 2020 11:38:26 GMT+0800 (中国标准时间) &quot;object&quot;</span><br><span class="line">Sat Feb 15 2020 11:38:36 GMT+0800 (中国标准时间) string</span><br></pre></td></tr></table></figure><p>本文部分内容引用于<font color="#2ab2ab"><strong>菜鸟教程</strong></font></p>]]></content>
    
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue练习实例</title>
    <link href="/2020-02-11/vue%E7%BB%83%E4%B9%A0%E5%AE%9E%E4%BE%8B/"/>
    <url>/2020-02-11/vue%E7%BB%83%E4%B9%A0%E5%AE%9E%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<p>最近在b站学习vue框架，跟着老师用vue写了一个音乐播放器</p><p>实例<a href="http://ganto.xyz/vue">链接</a></p><p>播放器使用了 网易云音乐api 接口</p><p>用vue实现的</p><p>如想了解 <a href="https://autumnfish.cn/" target="_blank" rel="external nofollow noopener noreferrer">网易云音乐 API</a> 可以访问官方文档了解</p>]]></content>
    
    
    <categories>
      
      <category>vue</category>
      
      <category>实例</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网易云音乐 API</title>
    <link href="/2020-02-11/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-API/"/>
    <url>/2020-02-11/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-API/</url>
    
    <content type="html"><![CDATA[<p>网易云音乐在国产音乐服务方面确实做的数一数二</p><p><a href="https://autumnfish.cn/" target="_blank" rel="external nofollow noopener noreferrer">网易云音乐 API</a>接口，里面的接口类型很丰富，关键是免费，大家可以耍一耍</p><p><img src="http://ganto.top/blog/article/share/images/wy.jpg" srcset="/img/loading.gif" alt></p><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><ul><li><a href="https://autumnfish.cn/" target="_blank" rel="external nofollow noopener noreferrer">网易云音乐 API</a></li><li><a href="https://music.163.com/" target="_blank" rel="external nofollow noopener noreferrer">网易云音乐</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>网易云音乐api</category>
      
      <category>分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>api</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>axios使用方法</title>
    <link href="/2020-02-11/axios%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/2020-02-11/axios%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h4 id="快速了解AXIOS"><a href="#快速了解AXIOS" class="headerlink" title="快速了解AXIOS"></a>快速了解AXIOS</h4><h5 id="什么是axios"><a href="#什么是axios" class="headerlink" title="什么是axios"></a>什么是axios</h5><p>Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。</p><h5 id="axios的特性"><a href="#axios的特性" class="headerlink" title="axios的特性"></a>axios的特性</h5><ul><li>从浏览器中创建 XMLHttpRequests</li><li>从 node.js 创建 http 请求</li><li>支持 Promise API</li><li>拦截请求和响应</li><li>转换请求数据和响应数据</li><li>取消请求</li><li>自动转换 JSON 数据</li><li>客户端支持防御 XSRF</li></ul><h4 id="部署到项目中"><a href="#部署到项目中" class="headerlink" title="部署到项目中"></a>部署到项目中</h4><p>直接导入在线js库，就可以在项目中使用axios了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;axios&#x2F;dist&#x2F;axios.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">axios.get(<span class="string">"https://autumnfish.cn/api/joke/list?num=1"</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">success</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(success);</span><br><span class="line">&#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(error);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>此链接：<a href="https://autumnfish.cn/api/joke/list?num=1为获取随机笑话的api接口" target="_blank" rel="external nofollow noopener noreferrer">https://autumnfish.cn/api/joke/list?num=1为获取随机笑话的api接口</a></p><h4 id="AXIOS与VUE结合使用"><a href="#AXIOS与VUE结合使用" class="headerlink" title="AXIOS与VUE结合使用"></a>AXIOS与VUE结合使用</h4><p>将axios请求数据代码添加入methods中，其他的语法和非vue项目中请求一样</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">  axios.get(<span class="string">"请求数据地址"</span>).then(<span class="function"><span class="keyword">function</span>(<span class="params">success</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(success);</span><br><span class="line">  &#125;).catch(<span class="function"><span class="keyword">function</span>(<span class="params">error</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>axios</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue中的常用指令</title>
    <link href="/2020-02-10/vue%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <url>/2020-02-10/vue%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="VUE中的常用指令"><a href="#VUE中的常用指令" class="headerlink" title="VUE中的常用指令"></a>VUE中的常用指令</h1><h4 id="整理基本的常用指令"><a href="#整理基本的常用指令" class="headerlink" title="整理基本的常用指令"></a>整理基本的常用指令</h4><p><code>v-text</code> <code>v-html</code> <code>v-on</code> <code>v-show</code> <code>v-if</code> <code>v-bind</code> <code>v-for</code> <code>v-model</code></p><h4 id="vue中的常用指令在代码中使用"><a href="#vue中的常用指令在代码中使用" class="headerlink" title="vue中的常用指令在代码中使用"></a>vue中的常用指令在代码中使用</h4><p>js代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">el:<span class="string">"#app"</span>,</span><br><span class="line">data:&#123;</span><br><span class="line">message:<span class="string">"&lt;b&gt;加粗字体&lt;b&gt;"</span>,</span><br><span class="line">arr:[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line">&#125;,</span><br><span class="line">methods:&#123;</span><br><span class="line">fun:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">alert(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><h5 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">"message"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>v-text</code> <code>v-html</code> 的区别在于<code>v-html</code> 指令可以解析出标签，而<code>v-text</code> 不能解析标签，会原封不动的将&lt;b&gt;加粗字体&lt;/b&gt;打印出来。</p><h5 id="v-on-绑定的是一些事件，如-click、dblclick"><a href="#v-on-绑定的是一些事件，如-click、dblclick" class="headerlink" title="v-on / @ 绑定的是一些事件，如: click、dblclick"></a>v-on / @ 绑定的是一些事件，如: click、dblclick</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-on:click</span>=<span class="string">"fun"</span>&gt;</span>点击<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> @<span class="attr">:click</span>=<span class="string">"fun"</span>&gt;</span>点击<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-show</span>=<span class="string">"true"</span>&gt;</span>内容<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-if</span>=<span class="string">"true"</span>&gt;</span>内容<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>v-show</code> <code>v-if</code> 的区别在于 <code>v-show</code> 指令只是利用display样式对元素显示隐藏，而 <code>v-if</code> 是在DOM树内添加或者删除元素</p><h5 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">v-bind:src</span>=<span class="string">"/路径"</span>&gt;</span>a标签<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">a</span> <span class="attr">:src</span>=<span class="string">"/路径"</span>&gt;</span>a标签<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-for</span>=<span class="string">"a in arr"</span>&gt;</span>&#123;&#123;a&#125;&#125;<span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="v-model双向数据绑定"><a href="#v-model双向数据绑定" class="headerlink" title="v-model双向数据绑定"></a>v-model双向数据绑定</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"message"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>vue</category>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我的第一个vue程序</title>
    <link href="/2020-02-10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAvue%E7%A8%8B%E5%BA%8F/"/>
    <url>/2020-02-10/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAvue%E7%A8%8B%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="我的第一个VUE程序"><a href="#我的第一个VUE程序" class="headerlink" title="我的第一个VUE程序"></a>我的第一个VUE程序</h1><p>此文章只是记录自己的vue学习情况文档！方便日后自己查询。</p><h2 id="VUE-JS相关资料"><a href="#VUE-JS相关资料" class="headerlink" title="VUE.JS相关资料"></a>VUE.JS相关资料</h2><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><ul><li><p>Vue官方网站中文文档：<a href="https://cn.vuejs.org/" target="_blank" rel="external nofollow noopener noreferrer">vue.js</a></p></li><li><p>部署vue项目：只需在html文件下引用下方代码，就可以直接将vue部署到项目中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="我的第一个VUE程序：HELLO-VUE"><a href="#我的第一个VUE程序：HELLO-VUE" class="headerlink" title="我的第一个VUE程序：HELLO VUE!"></a>我的第一个VUE程序：HELLO VUE!</h2><p>html代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">&#123;&#123;message&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>js代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">el:<span class="string">"#app"</span>,</span><br><span class="line">data:&#123;</span><br><span class="line">message:<span class="string">"Hello Vue!"</span></span><br><span class="line">&#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>​    <font color="red"><strong>注意：</strong></font>编写的vue项目中的js代码，至少要放到body下的最后一个结束标签后面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;vue&#x2F;dist&#x2F;vue.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;app&quot;&gt;</span><br><span class="line">&#123;&#123;message&#125;&#125;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;script&gt;</span><br><span class="line">    var app &#x3D; new Vue(&#123;</span><br><span class="line">    el:&quot;#app&quot;,</span><br><span class="line">    data:&#123;</span><br><span class="line">    message:&quot;Hello Vue!&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    &lt;&#x2F;script&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>渐进式 JavaScript 框架</p>]]></content>
    
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2010-02-20/test/"/>
    <url>/2010-02-20/test/</url>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HTML</span><br><span class="line">JavaScript</span><br><span class="line">CSS</span><br><span class="line">jQuery</span><br><span class="line">Vue.js</span><br><span class="line">php</span><br><span class="line">java</span><br><span class="line">github</span><br><span class="line">git</span><br><span class="line">hexo</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>test</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</title>
    <link href="/2000-06-15/hexo-clean-hexo-g-hexo-d/"/>
    <url>/2000-06-15/hexo-clean-hexo-g-hexo-d/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo-clean-amp-amp-hexo-g-amp-amp-hexo-d"><a href="#hexo-clean-amp-amp-hexo-g-amp-amp-hexo-d" class="headerlink" title="$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d"></a>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</h2><h6 id="git上传码云代码，第一次上传路径有问题，第二次覆盖上传，即便路径修改对了（码云源码都正确了），访问网页还是路径错误，你必须得从新建库，重新上传才行，要不然那个错误将永远留在那里，我是真搞不懂为什么会这样"><a href="#git上传码云代码，第一次上传路径有问题，第二次覆盖上传，即便路径修改对了（码云源码都正确了），访问网页还是路径错误，你必须得从新建库，重新上传才行，要不然那个错误将永远留在那里，我是真搞不懂为什么会这样" class="headerlink" title="git上传码云代码，第一次上传路径有问题，第二次覆盖上传，即便路径修改对了（码云源码都正确了），访问网页还是路径错误，你必须得从新建库，重新上传才行，要不然那个错误将永远留在那里，我是真搞不懂为什么会这样"></a>git上传码云代码，第一次上传路径有问题，第二次覆盖上传，即便路径修改对了（码云源码都正确了），访问网页还是路径错误，你必须得从新建库，重新上传才行，要不然那个错误将永远留在那里，我是真搞不懂为什么会这样</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这个问题我知道因为什么了，因为需要更新码云中的 Pages 服务，就是重启一下，这其实很不方便</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2000-06-15/hello-world/"/>
    <url>/2000-06-15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external nofollow noopener noreferrer">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external nofollow noopener noreferrer">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external nofollow noopener noreferrer">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external nofollow noopener noreferrer">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external nofollow noopener noreferrer">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external nofollow noopener noreferrer">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external nofollow noopener noreferrer">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="external nofollow noopener noreferrer">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
