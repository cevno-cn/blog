<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>还2020河南专升本考生一个公平</title>
    <link href="/2020-07-12/fair/"/>
    <url>/2020-07-12/fair/</url>
    
    <content type="html"><![CDATA[<p>2020河南专升本考试在7月9号顺利举行，但是大部分考生在考完最后一科后，都哭了</p><p>管理学考试内容根本不在他们奋斗几个月或更长时间背诵的知识范围内，也就是说考生们背诵的内容，和考试内容不一样，多年以来河南专升本管理学大纲都是周三多版的考试大纲，虽然没有明确指出考试大纲，但是人们都认为2020年也会是周三多考试内容，但是考试内容并不是周三多版，而是马工程版，所以导致，几乎所有考生奋斗的几个月时间都是白奋斗了。更加离谱的是，河南天一培训机构，vip班更是精准的押中管理学近80多分的考试内容，近乎都是原题，一字不拉的原题。为什么会这样大家都心知肚明。</p><p>高数、英语等其他科目也出现或多或少的这种情况</p><p>在过去几年也都有泄题的情况，但是都没有得到解决就不了了之了</p><p>希望省招办成立的调查组可以调查出来真相<br><img src="http://a.cevno.cn/img/heao.png" srcset="/img/loading.gif" alt></p><p><a href="http://www.heao.gov.cn/a/202007/42289.shtml" target="_blank" rel="external nofollow noopener noreferrer">原文地址</a></p><p>前天这个事件上了热搜，没多上时间就被下了。买热搜，下热搜是新浪微博的一贯作风，我反而不觉得奇怪,更会让别人认为，这是某些人心虚了，花钱撤热搜</p><p>可千万别让十几万考生心寒，我们可以没学上，但我们需要一场相对公平的专升本考试，而不想做资本家的陪玩</p><p><video controls style="width: 100%;" src="http://video.cetv.cn/fs/livecut/20200712/nzitqibt.mp4"></video></p><hr><hr><hr><p>下面请欣赏🐕的叫声<br><img src="http://a.cevno.cn/img/0.png" srcset="/img/loading.gif" alt></p><hr><p><img src="http://a.cevno.cn/img/1.png" srcset="/img/loading.gif" alt></p><hr><p><img src="http://a.cevno.cn/img/2.png" srcset="/img/loading.gif" alt><br><img src="http://a.cevno.cn/img/2_0.png" srcset="/img/loading.gif" alt></p><p><a href="https://www.bilibili.com/video/BV1CV41167M1" target="_blank" rel="external nofollow noopener noreferrer">b站里的</a><br><a href="https://weibo.com/5765574820/JaOCFggFQ?type=comment" target="_blank" rel="external nofollow noopener noreferrer">微博里的</a></p><p>和狗对骂毫无意义，他们是狗，不会在乎你骂他们的，如果看到他们的无能狂叫，就当看个笑话得了</p><p>狗嘛，不能对他们要求太高，随便逗他们玩玩好了</p><iframe style="width: 100%;height: 500px;" src="//player.bilibili.com/player.html?aid=838851021&bvid=BV15g4y1i7jK&cid=213186013&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe><p>7月25号，成绩已经发布，距离调查组7月10号开始调查到现在已经整整15天，所谓的调查组依然没有一丁点消息，这就是河南教育的办事效率吧</p><p>我不敢断言河南的教育和某培训机构有非法的勾当，但我也绝不否认这种看法，这么多天没了消息，难道教育厅真就没有问题，难道是培训机构给了天价封口费？不至于吧！你可是政府部门啊，你可是一个国家最基本最重要的机构啊，我真的不敢想象一个国家的教育都出现了腐败现象，那这个社会会变得怎样，什么都可以通过钱财来办，有钱就可以上好的学校，那教育的意义何在，教育部门存在的意义又何在，存在的意义不会就是捞钱吧？不会吧!？</p><p>这件事因为热度不够，没能得到中央的重视，自己调查自己本来就没结果，从10号一直拖到现在都没调查出来任何结果，中间你们确实编出来了几个借口：不排除机构广告嫌疑、其他机构恶意举报</p><p>就一直拖到热度消散，一直拖到成绩出来，让我们彻底死心吧？</p><p>对于河南专升本的泄题事件，算是结束了，但并没完美的给我们考生一个很好的解释，总感觉是含糊其词的把这件事给解决了</p><hr>针对网上反映河南专升本管理学科目考试有关问题，河南联合调查组立即进行全面调查。经查，某培训机构在专升本考试封闭命题前，非法从参与命题人员赵某某处获取部分信息。目前，公安机关已立案侦查，依法对犯罪嫌疑人采取了强制措施。根据案件调查情况，将对所有违法违纪违规相关人员进行严肃处理，处理结果将及时向社会公布，坚决维护教育公平。<p><a href="http://www.heao.gov.cn/a/202007/42309.shtml" target="_blank" rel="external nofollow noopener noreferrer">原文链接</a></p><hr>现在是2020年10月13号，至于处理结果，我反正没看到公布；对于这个培训机构，我看到的是依然不受丝毫影响的在运营；至于政府相关的考试，我我看到的就是好容易被被泄题。。。对于这个赵某某，我反正也没见过真容，至于是不是虚构的人物，照现在河南教育厅所作所为，我真不排除是背锅虚拟人物。<p>别的没什么说的，希望“你们”再接再厉，再创辉煌？！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>夜间模式</title>
    <link href="/2020-05-01/night/"/>
    <url>/2020-05-01/night/</url>
    
    <content type="html"><![CDATA[<p>最近在逛各个大佬的博客，发现了个很有趣的功能，就是网页中的夜间模式</p><p>并且切换到夜间模式，刷新页面并不会恢复</p><p>然后自己试着实现这个功能</p><p>直接附上代码</p><p>代码写的比较糙，需要的小伙伴自行随意修改</p><link rel="stylesheet" type="text/css" href="/night/index.css"><script src="/night/index.js"></script><div id="an" style="cursor: pointer;display: flex;justify-content: center;"><b>测试按钮</b></div><br><pre><code class="html">&lt;!DOCTYPE html&gt;&lt;html&gt;    &lt;head&gt;        &lt;meta charset=&quot;utf-8&quot;&gt;        &lt;title&gt;&lt;/title&gt;        &lt;style type=&quot;text/css&quot;&gt;            *{                margin: 0;                padding: 0;            }            body{                transition: all 1s;                position: absolute;                top: 0;                right: 0;                bottom: 0;                left: 0;            }            .box{                width: 100%;                height: 100%;                text-align: center;            }            #an{                display: inline-block;                width: 50px;                height: 50px;                cursor: pointer;                border-radius: 10px;                background-size: 100%;                background-repeat: no-repeat;            }        &lt;/style&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery/3.5.0/jquery.js&quot;&gt;&lt;/script&gt;        &lt;script type=&quot;text/javascript&quot;&gt;            // 声明所用到的变量            var y = parseInt(getCookie(&quot;night&quot;)),                a = document.getElementsByTagName(&quot;a&quot;),                j,                i,                name,                ca,                c;            // 返回cookie指定参数的方法            function getCookie(cname){                name = cname + &quot;=&quot;;                ca = document.cookie.split(&#39;;&#39;);                for(i=0; i&lt;ca.length; i++) {                    c = ca[i].trim();                    if (c.indexOf(name)==0) return c.substring(name.length,c.length);                }                return &quot;&quot;;            }            // 判断cookie值中的night为 0 or 1 ;            function panduan(){                y = parseInt(getCookie(&quot;night&quot;));                if(y == 0){ // 白天模式的样式                    document.body.style.backgroundColor = &quot;&quot;;                    document.body.style.color = &quot;&quot;;                    // $(&quot;#an&quot;).html(&quot;夜间模式&quot;); // 切换按钮 文字 型                    $(&quot;#an&quot;).css(&quot;background-image&quot;, &quot;url(img/夜晚.png)&quot;); // 切换按钮 图标 型                    for(j = 0; j &lt; a.length; j++){                        a[j].style.color = &quot;&quot;                    }                }else if(y == 1){ // 夜间模式的样式                    document.body.style.backgroundColor = &quot;black&quot;;                    document.body.style.color = &quot;white&quot;;                    // $(&quot;#an&quot;).html(&quot;白天模式&quot;);                    $(&quot;#an&quot;).css(&quot;background-image&quot;, &quot;url(img/白天.png)&quot;);                    for(j = 0; j &lt; a.length; j++){                        a[j].style.color = &quot;white&quot;                    }                }            }            // 判断night是否存在，设置初始cookie值            if(y == 0){                panduan();            }else if(y == 1){                panduan();            }else{ // night不存在则执行，初始化night = 0 即 白天模式                document.cookie=&quot;night = 0; expires=Thu, 18 Dec 2043 12:00:00 GMT; path=/&quot;;                panduan();            }            // 刷新页面时直接执行判断方法，从而实现刷新页面            panduan();            window.onload = function(){                panduan(); // 页面资源加载完成后，再次执行判断方法（可删）                $(&quot;#an&quot;).click(function(){                    if(y == 0){                        document.cookie=&quot;night = 1; expires=Thu, 18 Dec 2043 12:00:00 GMT; path=/&quot;; // 修改 1 / 夜间                        panduan();                    }else if(y == 1){                        document.cookie=&quot;night = 0; expires=Thu, 18 Dec 2043 12:00:00 GMT; path=/&quot;; // 修改 0 / 白天                        panduan();                    }else{                        document.cookie=&quot;night = 1; expires=Thu, 18 Dec 2043 12:00:00 GMT; path=/&quot;; // 第一次加载，设置默认cookie值                        panduan();                    }                })            }        &lt;/script&gt;        &lt;div class=&quot;box&quot;&gt;            &lt;div id=&quot;an&quot;&gt;&lt;/div&gt;            &lt;div id=&quot;&quot;&gt;                &lt;a href=&quot;&quot;&gt;这是a标签&lt;/a&gt;                &lt;p&gt;这是p标签&lt;/p&gt;                &lt;b&gt;这是b标签&lt;/b&gt;            &lt;/div&gt;        &lt;/div&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>网易云音乐热评</title>
    <link href="/2020-04-18/163music/"/>
    <url>/2020-04-18/163music/</url>
    
    <content type="html"><![CDATA[<blockquote><p>网页界面参考 <a href="https://github.com/xiongbao/we.dog" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/xiongbao/we.dog</a></p><p>网页数据来自 <a href="https://alapi.cn/" target="_blank" rel="external nofollow noopener noreferrer">https://alapi.cn/</a></p><p>演示地址 <a href="http://music.cevno.cn" target="_blank" rel="external nofollow noopener noreferrer">http://music.cevno.cn</a></p></blockquote><h2 id="食用技巧"><a href="#食用技巧" class="headerlink" title="食用技巧"></a>食用技巧</h2><ul><li>双击用户名处，切换下一个随机热评</li><li>单机歌曲名处，播放或暂停音乐<br><img src="http://music.cevno.cn/music.png" srcset="/img/loading.gif" alt></li></ul><p><strong><p align="center" style="font-size: 20px;">客官，您慢慢食用！</p></strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>music</tag>
      
      <tag>网易</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>舔狗日记</title>
    <link href="/2020-04-16/dog/"/>
    <url>/2020-04-16/dog/</url>
    
    <content type="html"><![CDATA[<blockquote><p>网页界面源码来自 <a href="https://github.com/xiongbao/we.dog" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/xiongbao/we.dog</a></p><p>演示地址 <a href="http://dog.cevno.cn" target="_blank" rel="external nofollow noopener noreferrer">http://dog.cevno.cn</a></p></blockquote><h2 id="网站截图"><a href="#网站截图" class="headerlink" title="网站截图"></a>网站截图</h2><p><img src="http://dog.cevno.cn/dog.png" srcset="/img/loading.gif" alt="网站截图"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>删除EFI分区</title>
    <link href="/2020-04-14/diskpart/"/>
    <url>/2020-04-14/diskpart/</url>
    
    <content type="html"><![CDATA[<h2 id="Windows-R-gt-cmd"><a href="#Windows-R-gt-cmd" class="headerlink" title="Windows + R =&gt; cmd"></a>Windows + R =&gt; cmd</h2><pre><code class="shell">Microsoft Windows [版本 10.0.18363.752](c) 2019 Microsoft Corporation。保留所有权利。C:\Users\XXX&gt;</code></pre><h2 id="diskpart"><a href="#diskpart" class="headerlink" title="diskpart"></a>diskpart</h2><pre><code class="shell">C:\Users\XXX&gt;diskpart</code></pre><pre><code class="shell">Microsoft DiskPart 版本 10.0.18362.1Copyright (C) Microsoft Corporation.在计算机上: DESKTOP-XXXDISKPART&gt;</code></pre><h2 id="list-disk"><a href="#list-disk" class="headerlink" title="list disk"></a>list disk</h2><pre><code class="shell">DISKPART&gt; list disk  磁盘 ###  状态           大小     可用     Dyn  Gpt  --------  -------------  -------  -------  ---  ---  磁盘 0    联机            465 GB   1024 KB  磁盘 1    无介质            0 B      0 B  磁盘 2    联机             57 GB     0 B          *</code></pre><h2 id="select-disk-2"><a href="#select-disk-2" class="headerlink" title="select disk 2"></a>select disk 2</h2><pre><code class="shell">DISKPART&gt; select disk 2磁盘 2 现在是所选磁盘。</code></pre><h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><pre><code class="shell">DISKPART&gt; cleanDiskPart 成功地清除了磁盘。</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>b站账号被永久封禁？</title>
    <link href="/2020-03-15/b/"/>
    <url>/2020-03-15/b/</url>
    
    <content type="html"><![CDATA[<p><code>置顶</code><br><img src="http://b.ganto.xyz/img/e.jpg" srcset="/img/loading.gif" alt></p><iframe style="border: 0;height: 651.875rem;" src="http://b.ganto.xyz" width="100%" height></iframe>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>网站地图sitemap.xml</title>
    <link href="/2020-02-26/sitemap/"/>
    <url>/2020-02-26/sitemap/</url>
    
    <content type="html"><![CDATA[<p>使用npm安装适用于百度的自动生成sitemap.xml文件的插件</p><pre><code>npm install hexo-generator-baidu-sitemap --save //安装适用于百度的自动生成sitemap.xml文件的插件</code></pre><p>在hexo根目录配置文件中添加下列字段(注意缩进)</p><pre><code>baidusitemap:    path: baidusitemap.xml</code></pre><p>这样在执行<code>hexo g</code>生成静态文件的时候，会在public目录下生成baidusitemap.xml文件，则表示安装成功</p>]]></content>
    
    
    
    <tags>
      
      <tag>sitemap</tag>
      
      <tag>seo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>评论功能开启了，欢迎交流</title>
    <link href="/2020-02-20/%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E5%BC%80%E5%90%AF%E4%BA%86%EF%BC%8C%E6%AC%A2%E8%BF%8E%E4%BA%A4%E6%B5%81/"/>
    <url>/2020-02-20/%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD%E5%BC%80%E5%90%AF%E4%BA%86%EF%BC%8C%E6%AC%A2%E8%BF%8E%E4%BA%A4%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<p>博客评论功能开启了</p><p>使用valine评论系统</p><p>欢迎大家来评论</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>valine</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决无法访问GitHub</title>
    <link href="/2020-02-18/%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AEGitHub/"/>
    <url>/2020-02-18/%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AEGitHub/</url>
    
    <content type="html"><![CDATA[<h2 id="国内用户无法访问GitHub解决办法"><a href="#国内用户无法访问GitHub解决办法" class="headerlink" title="国内用户无法访问GitHub解决办法"></a>国内用户无法访问GitHub解决办法</h2><h6 id="进入电脑此路径C-Windows-System32-drivers-etc，用记事本打开hosts文件，在后面添加一下字段"><a href="#进入电脑此路径C-Windows-System32-drivers-etc，用记事本打开hosts文件，在后面添加一下字段" class="headerlink" title="进入电脑此路径C:\Windows\System32\drivers\etc，用记事本打开hosts文件，在后面添加一下字段"></a>进入电脑此路径C:\Windows\System32\drivers\etc，用记事本打开hosts文件，在后面添加一下字段</h6><pre><code>192.30.253.112 github.com</code></pre><p>添加完成后，保存即可</p><p>因为修改的C盘文件，可能需要管理员权限</p><p>如果被电脑管家检测到风险，选择信任即可！</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo博客从0到部署</title>
    <link href="/2020-02-18/hexo%E5%8D%9A%E5%AE%A2%E4%BB%8E0%E5%88%B0%E9%83%A8%E7%BD%B2/"/>
    <url>/2020-02-18/hexo%E5%8D%9A%E5%AE%A2%E4%BB%8E0%E5%88%B0%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="第一步：我们首先要安装node-js和git"><a href="#第一步：我们首先要安装node-js和git" class="headerlink" title="第一步：我们首先要安装node.js和git"></a>第一步：我们首先要安装node.js和git</h2><p>因为hexo是基于<code>node.js</code>，所以比较依赖于<code>node.js</code>把md文件生成静态文件html。</p><p>我们是利用<code>git</code>进行对hexo项目操作的，包括把文章部署到码云/github。</p><p>所以首先要安装<code>node.js</code>、<code>git</code></p><h2 id="第二步：安装并生成hexo默认文件"><a href="#第二步：安装并生成hexo默认文件" class="headerlink" title="第二步：安装并生成hexo默认文件"></a>第二步：安装并生成hexo默认文件</h2><h4 id="1-安装hexo"><a href="#1-安装hexo" class="headerlink" title="1. 安装hexo"></a>1. 安装hexo</h4><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><p>首先创建一个文件夹为“blog”来存放我们的博客文件，我们右键使用Git Bash Here打开。</p><p>直接运行下方代码，使用 npm进行安装hexo</p><pre><code>$ npm install hexo-cli -g</code></pre><p>安装结束后，我们通过以下命令查看版本</p><pre><code>$ hexo version</code></pre><p>如果出现一下文字，则证明安装hexo成功，这里打印出了各种依赖环境的版本号</p><pre><code>hexo-cli: 3.1.0os: Windows_NT 10.0.18363 win32 x64node: 12.14.1v8: 7.7.299.13-node.16uv: 1.33.1zlib: 1.2.11brotli: 1.0.7ares: 1.15.0modules: 72nghttp2: 1.40.0napi: 5llhttp: 2.0.1http_parser: 2.8.0openssl: 1.1.1dcldr: 35.1icu: 64.2tz: 2019cunicode: 12.1</code></pre><h4 id="2-新建所需的文件"><a href="#2-新建所需的文件" class="headerlink" title="2. 新建所需的文件"></a>2. 新建所需的文件</h4><p>安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</p><pre><code>$ hexo init myblog // 新建所需要的文件$ cd myblog // 进入myblog$ npm install // 同步配置文件</code></pre><p><strong>注意</strong>：在使用<code>$ hexo init</code>命令的时候有概率会出现配置环境的问题，如果没保存就直接往下运行即可</p><p>启动hexo</p><pre><code>$ hexo server</code></pre><p>然后我们就可以使用 localhost:4000 访问了！</p><h2 id="第三步：部署到github"><a href="#第三步：部署到github" class="headerlink" title="第三步：部署到github"></a>第三步：部署到github</h2><h4 id="github准备工作"><a href="#github准备工作" class="headerlink" title="github准备工作"></a>github准备工作</h4><p>首先我们需要有一个github账户，自己去注册一个就可以</p><p>然后创建一个仓库</p><p>创建仓库的时候勾上 <strong><em>Initialize this repository with a README</em></strong></p><p>然后进入仓库点击，绿色处<strong>Clone or download</strong>，复制<strong>https</strong>地址，如：<a href="https://github.com/xxxx/xx.git" target="_blank" rel="external nofollow noopener noreferrer">https://github.com/xxxx/xx.git</a></p><h4 id="配置-config-yml文件"><a href="#配置-config-yml文件" class="headerlink" title="配置_config.yml文件"></a>配置_config.yml文件</h4><p>打开配置文件，拉到最后，找到<strong>deploy</strong>，这样配置</p><pre><code># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo: https://github.com/xxxx/xx.git  branch: master</code></pre><p>如果要同时部署到码云/github，可以这样配置</p><pre><code># Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy:  type: git  repo:     coding: https://gitee.com/xxx/xxx.git,master    duapp: https://github.com/xxx/xxx.github.io.git,master</code></pre><p>一点要注意规范，<code>type:</code> <code>repo:</code> <code>branch:</code>后一定要空一格</p><h4 id="提交代码到github仓库"><a href="#提交代码到github仓库" class="headerlink" title="提交代码到github仓库"></a>提交代码到github仓库</h4><p>首先安装 hexo-deployer-git，这是一个插件包，用于提交代码到<strong>码云</strong> / <strong>github</strong></p><pre><code>$ npm install hexo-deployer-git --save</code></pre><p>执行成功后，会在文件夹中多出一个<strong>.deploy_git</strong>文件夹</p><p>然后执行下面代码提交你的邮箱和用户名（这里指的是你的GitHub邮箱、用户名）</p><pre><code>git config --global user.email “你的邮箱”git config --global user.name “用户名”</code></pre><p>接着执行以下命令将代码推送上去</p><pre><code>$ hexo clean$ hexo g$ hexo d</code></pre><p>也可以这样执行命令</p><pre><code>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><p>这时会弹出账号/密码框，账号和密码，就是GitHub登录的账号和密码</p><p>成功提交代码后，我们会在GitHub仓库看到我们提交的代码</p><h2 id="上传到码云仓库"><a href="#上传到码云仓库" class="headerlink" title="上传到码云仓库"></a>上传到码云仓库</h2><p>上传到码云仓库和GitHub仓库，基本一样，可以按照上方操作进行</p><p>要注意配置文件中的root:<br>默认是root: /，可能要修改成root: <a href="https://ganto_blog.gitee.io/xxx/" target="_blank" rel="external nofollow noopener noreferrer">https://ganto_blog.gitee.io/xxx/</a> 或者 root: /xxx/</p><p>因为码云仓库，创建之后，会在一个类似文件夹中，所以配置文件这里需要修改为root: /xxx/</p><h2 id="搭建后出现的一系列问题"><a href="#搭建后出现的一系列问题" class="headerlink" title="搭建后出现的一系列问题"></a>搭建后出现的一系列问题</h2><ol><li><p>如果你是上传到码云仓库，码云Gitee Pages 普通版，每次提交代码后，都需要手动更新 Pages 服务（重启 Pages 服务），可以免费使用一个月pro版，坑</p></li><li><p>在博客中有时候加载jQuery包的路径无法访问，我们需要修改jQuery包路径，这个问题好像只有默认landscape主题有,如果真的存在这种问题的话，可以进入themes\landscape\layout_partial，找到after-footer.ejs打开，把引用的包改成其他可以访问的即可，不可以改成http地址包</p></li></ol><pre><code>&lt;script src=&quot;//cdn.bootcss.com/jquery/3.4.1/jquery.min.js&quot;&gt;&lt;/script&gt;</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于JavaScript中常用方法的整理</title>
    <link href="/2020-02-15/%E5%85%B3%E4%BA%8EJavaScript%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E7%9A%84%E6%95%B4%E7%90%86/"/>
    <url>/2020-02-15/%E5%85%B3%E4%BA%8EJavaScript%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95%E7%9A%84%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h2 id="SPLICE"><a href="#SPLICE" class="headerlink" title="SPLICE"></a>SPLICE</h2><p>splice的用法有很多，主要是对<strong>数组</strong>进行操作，下面一一分析</p><p>splice向数组中添加/删除元素：</p><p><font color="#2ab2ab">添加</font></p><pre><code>var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];fruits.splice(2,0,&quot;Lemon&quot;,&quot;Kiwi&quot;);</code></pre><p>数组fruits输出结果</p><pre><code>Banana,Orange,Lemon,Kiwi,Apple,Mango</code></pre><p>splice(2,0,”Lemon”,”Kiwi”)的意思是，在数组下标为2的位置插入Lemon、Kiwi，其中0的意思是不删除原本下标为2的元素Apple，而是将插入的元素从下标2开始插入原本位置的元素往后走</p><p><font color="#2ab2ab">删除</font></p><pre><code>var arr = [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;];fruits.splice(2,2);</code></pre><p>数组arr输出结果</p><pre><code>1,2,5</code></pre><p><strong>注意:</strong> splice的返回值是被他删除的元素，这个返回值对我来说很重要，很good</p><pre><code>3,4</code></pre><h5 id="定义和用法"><a href="#定义和用法" class="headerlink" title="定义和用法"></a>定义和用法</h5><ul><li>splice() 方法用于添加或删除数组中的元素。</li><li><strong>注意:</strong> 这种方法会改变原始数组。</li></ul><h2 id="SPLIT"><a href="#SPLIT" class="headerlink" title="SPLIT"></a>SPLIT</h2><p>split主要作用于<strong>字符串</strong>，我们常用split分割字符串成为数组</p><pre><code>var s = &quot;123 456&quot;;var t = s.split(&#39;&#39;);</code></pre><p>split的返回值(变量t的值)是一个数组</p><pre><code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot; &quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;]</code></pre><p>split的参数可以是空格，也可以是某个特定的字符，也可以为空，为空的话就会把每个字符包括空格都分开，进而转化成数组</p><p><strong>注意:</strong> 空格(“ “)和空(“”)不一样</p><p>split可以写两个参数</p><pre><code>var s = &quot;123 456&quot;;var t = s.split(&#39;&#39;,3);</code></pre><p>split的返回值结果</p><pre><code>[&quot;1&quot;, &quot;2&quot;, &quot;3&quot;]</code></pre><p>split(‘’,3)其中3可以这么理解，是split将字符串转化成为数组后，只返回三个数组长度的值，这里的3不是下标，可以理解为数组长度</p><h2 id="SLICE"><a href="#SLICE" class="headerlink" title="SLICE"></a>SLICE</h2><p><font color="#2ab2ab">slice在数组中读取元素、在字符串中截取</font></p><pre><code>var s = [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;];var t = s.slice(2,3);</code></pre><p>slice返回结果</p><pre><code>[&quot;3&quot;]</code></pre><p>slice(2,3)参数是从数组下标为2读取到下标为3，其中‘包前不包后’，就是读取出下标为2的元素，但不读取下标为3的元素</p><p>slice一个参数表示，从当前下标读取到最后，如<code>slice(2)</code></p><p><font color="#2ab2ab">字符串和数组类似，可以直接参考上方代码</font></p><pre><code>// 代码参考上方</code></pre><p><font color="#2ab2ab">slice参数为负值时</font></p><pre><code>var s = [&quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;];var t = s.slice(-2,-1);</code></pre><p>slice返回结果</p><pre><code>[&quot;4&quot;]</code></pre><p>我们可以这么理解slice(-2,-1),符号相当于反方向，意思就是从数组或者字符串反方向读取，即: 从下标为1读取到下标为2，规则遵循‘包前不包后’，这里的前后是反方向中的前后</p><h2 id="SUBSTRING"><a href="#SUBSTRING" class="headerlink" title="SUBSTRING"></a>SUBSTRING</h2><pre><code>string.substring(from, to)</code></pre><p>substring() 方法用于提取字符串中介于两个指定下标之间的字符</p><p>且依然遵循‘包前不包后’</p><p>如果只包含一个参数，依然是截取到最后</p><h2 id="SUBSTR"><a href="#SUBSTR" class="headerlink" title="SUBSTR"></a>SUBSTR</h2><p>substr() 抽取指定数目的字符</p><pre><code>var s = &quot;123 456&quot;;var t = s.substr(2,5);</code></pre><p>substr返回结果</p><pre><code>3 456</code></pre><p>substr(2,5) 可以理解为从下标2开始（包含下标为2的字符）提取字符5个字符</p><p>如果substr只包含一个参数，依然是提取到最后</p><h2 id="TOSTRING"><a href="#TOSTRING" class="headerlink" title="TOSTRING"></a>TOSTRING</h2><p>toString() 将Date 对象转换为字符串</p><pre><code>var s = new Date();console.log(s,typeof s);var t = s.toString();console.log(t,typeof t);</code></pre><p>console.log() 打印结果</p><pre><code>Sat Feb 15 2020 11:38:26 GMT+0800 (中国标准时间) &quot;object&quot;Sat Feb 15 2020 11:38:36 GMT+0800 (中国标准时间) string</code></pre><p>本文部分内容引用于<font color="#2ab2ab"><strong>菜鸟教程</strong></font></p>]]></content>
    
    
    
    <tags>
      
      <tag>JavaScript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>axios使用方法</title>
    <link href="/2020-02-11/axios%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <url>/2020-02-11/axios%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h4 id="快速了解AXIOS"><a href="#快速了解AXIOS" class="headerlink" title="快速了解AXIOS"></a>快速了解AXIOS</h4><h5 id="什么是axios"><a href="#什么是axios" class="headerlink" title="什么是axios"></a>什么是axios</h5><p>Axios 是一个基于 promise 的 HTTP 库，可以用在浏览器和 node.js 中。</p><h5 id="axios的特性"><a href="#axios的特性" class="headerlink" title="axios的特性"></a>axios的特性</h5><ul><li>从浏览器中创建 XMLHttpRequests</li><li>从 node.js 创建 http 请求</li><li>支持 Promise API</li><li>拦截请求和响应</li><li>转换请求数据和响应数据</li><li>取消请求</li><li>自动转换 JSON 数据</li><li>客户端支持防御 XSRF</li></ul><h4 id="部署到项目中"><a href="#部署到项目中" class="headerlink" title="部署到项目中"></a>部署到项目中</h4><p>直接导入在线js库，就可以在项目中使用axios了</p><pre><code>&lt;script src=&quot;https://unpkg.com/axios/dist/axios.min.js&quot;&gt;&lt;/script&gt;</code></pre><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><pre><code class="js">axios.get(&quot;https://autumnfish.cn/api/joke/list?num=1&quot;).then(function(success){  console.log(success);}).catch(function(error){  console.log(error);});</code></pre><p>此链接：<a href="https://autumnfish.cn/api/joke/list?num=1" target="_blank" rel="external nofollow noopener noreferrer">https://autumnfish.cn/api/joke/list?num=1</a> 为获取随机笑话的api接口</p><h4 id="AXIOS与VUE结合使用"><a href="#AXIOS与VUE结合使用" class="headerlink" title="AXIOS与VUE结合使用"></a>AXIOS与VUE结合使用</h4><p>将axios请求数据代码添加入methods中，其他的语法和非vue项目中请求一样</p><pre><code class="js">methods:{  axios.get(&quot;请求数据地址&quot;).then(function(success){    console.log(success);  }).catch(function(error){    console.log(error);  });}</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>vue</tag>
      
      <tag>axios</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue练习实例</title>
    <link href="/2020-02-11/vue%E7%BB%83%E4%B9%A0%E5%AE%9E%E4%BE%8B/"/>
    <url>/2020-02-11/vue%E7%BB%83%E4%B9%A0%E5%AE%9E%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<p>最近在b站学习vue框架，跟着老师用vue写了一个音乐播放器</p><p>实例<a href="http://ganto.xyz/vue" target="_blank" rel="external nofollow noopener noreferrer">链接</a></p><p>播放器使用了 网易云音乐api 接口</p><p>用vue实现的</p><p>如想了解 <a href="https://autumnfish.cn/" target="_blank" rel="external nofollow noopener noreferrer">网易云音乐 API</a> 可以访问官方文档了解</p>]]></content>
    
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网易云音乐 API</title>
    <link href="/2020-02-11/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-API/"/>
    <url>/2020-02-11/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90-API/</url>
    
    <content type="html"><![CDATA[<p>网易云音乐在国产音乐服务方面确实做的数一数二</p><p><a href="https://autumnfish.cn/" target="_blank" rel="external nofollow noopener noreferrer">网易云音乐 API</a>接口，里面的接口类型很丰富，关键是免费，大家可以耍一耍</p><p><img src="http://demo.ganto.xyz/blog/article/share/images/wy.jpg" srcset="/img/loading.gif" alt></p><h4 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h4><ul><li><a href="https://autumnfish.cn/" target="_blank" rel="external nofollow noopener noreferrer">网易云音乐 API</a></li><li><a href="https://music.163.com/" target="_blank" rel="external nofollow noopener noreferrer">网易云音乐</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>网易云音乐api</category>
      
      <category>分享</category>
      
    </categories>
    
    
    <tags>
      
      <tag>api</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vue中的常用指令</title>
    <link href="/2020-02-10/vue%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/"/>
    <url>/2020-02-10/vue%E4%B8%AD%E7%9A%84%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="VUE中的常用指令"><a href="#VUE中的常用指令" class="headerlink" title="VUE中的常用指令"></a>VUE中的常用指令</h1><h4 id="整理基本的常用指令"><a href="#整理基本的常用指令" class="headerlink" title="整理基本的常用指令"></a>整理基本的常用指令</h4><p><code>v-text</code> <code>v-html</code> <code>v-on</code> <code>v-show</code> <code>v-if</code> <code>v-bind</code> <code>v-for</code> <code>v-model</code></p><h4 id="vue中的常用指令在代码中使用"><a href="#vue中的常用指令在代码中使用" class="headerlink" title="vue中的常用指令在代码中使用"></a>vue中的常用指令在代码中使用</h4><p>js代码</p><pre><code class="js">&lt;script&gt;    var app = new Vue({        el:&quot;#app&quot;,        data:{            message:&quot;&lt;b&gt;加粗字体&lt;b&gt;&quot;,            arr:[0,1,2,3]        },        methods:{            fun:function(){                alert(1);            }        }    })&lt;/script&gt;</code></pre><h5 id="v-text"><a href="#v-text" class="headerlink" title="v-text"></a>v-text</h5><pre><code class="html">&lt;div id=&quot;app&quot;&gt; &lt;span v-text=&quot;message&quot;&gt;&lt;span&gt;&lt;/div&gt;</code></pre><h5 id="v-html"><a href="#v-html" class="headerlink" title="v-html"></a>v-html</h5><pre><code class="html">&lt;div id=&quot;app&quot;&gt; &lt;span v-html=&quot;message&quot;&gt;&lt;span&gt;&lt;/div&gt;</code></pre><p><code>v-text</code> <code>v-html</code> 的区别在于<code>v-html</code> 指令可以解析出标签，而<code>v-text</code> 不能解析标签，会原封不动的将&lt;b&gt;加粗字体&lt;/b&gt;打印出来。</p><h5 id="v-on-绑定的是一些事件，如-click、dblclick"><a href="#v-on-绑定的是一些事件，如-click、dblclick" class="headerlink" title="v-on / @ 绑定的是一些事件，如: click、dblclick"></a>v-on / @ 绑定的是一些事件，如: click、dblclick</h5><pre><code class="html">&lt;div id=&quot;app&quot;&gt; &lt;span v-on:click=&quot;fun&quot;&gt;点击&lt;span&gt; &lt;span @:click=&quot;fun&quot;&gt;点击&lt;span&gt;&lt;/div&gt;</code></pre><h5 id="v-show"><a href="#v-show" class="headerlink" title="v-show"></a>v-show</h5><pre><code class="html">&lt;div id=&quot;app&quot;&gt; &lt;span v-show=&quot;true&quot;&gt;内容&lt;span&gt;&lt;/div&gt;</code></pre><h5 id="v-if"><a href="#v-if" class="headerlink" title="v-if"></a>v-if</h5><pre><code class="html">&lt;div id=&quot;app&quot;&gt; &lt;span v-if=&quot;true&quot;&gt;内容&lt;span&gt;&lt;/div&gt;</code></pre><p><code>v-show</code> <code>v-if</code> 的区别在于 <code>v-show</code> 指令只是利用display样式对元素显示隐藏，而 <code>v-if</code> 是在DOM树内添加或者删除元素</p><h5 id="v-bind"><a href="#v-bind" class="headerlink" title="v-bind"></a>v-bind</h5><pre><code class="html">&lt;div id=&quot;app&quot;&gt; &lt;a v-bind:src=&quot;/路径&quot;&gt;a标签&lt;/a&gt; &lt;a :src=&quot;/路径&quot;&gt;a标签&lt;/a&gt;&lt;/div&gt;</code></pre><h5 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h5><pre><code class="html">&lt;div id=&quot;app&quot;&gt; &lt;span v-for=&quot;a in arr&quot;&gt;{{a}}&lt;span&gt;&lt;/div&gt;</code></pre><h5 id="v-model双向数据绑定"><a href="#v-model双向数据绑定" class="headerlink" title="v-model双向数据绑定"></a>v-model双向数据绑定</h5><pre><code class="html">&lt;div id=&quot;app&quot;&gt; &lt;input v-model=&quot;message&quot; /&gt;&lt;/div&gt;</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决表单点击回车（enter）键自动刷新无法提交的问题</title>
    <link href="/2020-01-17/onsubmit/"/>
    <url>/2020-01-17/onsubmit/</url>
    
    <content type="html"><![CDATA[<h2 id="问题还原"><a href="#问题还原" class="headerlink" title="问题还原"></a>问题还原</h2><p>在我们写form表单使用回车（enter）键进行提交输入框内的数据时，会发现页面会自动刷新一下，刷新之后输入框内的内容也会清空，并不是直接提交，这样就导致了无法使用回车键提交form表单的死循环问题。</p><pre><code class="html">&lt;!DOCTYPE html&gt;&lt;html&gt;    &lt;head&gt;        &lt;meta charset=&quot;utf-8&quot; /&gt;        &lt;title&gt;test&lt;/title&gt;    &lt;/head&gt;    &lt;body&gt;        &lt;script src=&quot;https://cdn.bootcss.com/jquery/3.4.1/jquery.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;        &lt;script type=&quot;text/javascript&quot;&gt;            $(function(){                // 点击button按钮时，进行百度搜索                $(&#39;button&#39;).click(function(){                    var a = $(&quot;input&quot;).val();                    window.location.href = (&quot;https://www.baidu.com/s?wd=&quot;+a);                })                // 按下enter键，执行button按钮点击事件                $(&quot;body&quot;).keydown(function(e){                    if(e.keyCode == &quot;13&quot;){                        $(&quot;button&quot;).click();                    }                })            })        &lt;/script&gt;        &lt;div class=&quot;box&quot;&gt;            &lt;form&gt;                &lt;input type=&quot;text&quot;&gt;                &lt;button type=&quot;button&quot;&gt;提交&lt;/button&gt;            &lt;/form&gt;        &lt;/div&gt;    &lt;/body&gt;&lt;/html&gt;</code></pre><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ul><li><p><strong>方法一</strong><br>在form标签中添加 <code>onsubmit=&quot;return false&quot;</code> （看下方代码）</p><pre><code class="html">&lt;div class=&quot;box&quot;&gt;  &lt;form onsubmit=&quot;return false&quot;&gt;      &lt;input type=&quot;text&quot;&gt;      &lt;button type=&quot;button&quot;&gt;提交&lt;/button&gt;  &lt;/form&gt;&lt;/div&gt;</code></pre><p>在<code>form</code>标签中添加<code>onsubmit=&quot;return false&quot;</code>意为<strong>阻止form表单自动提交行为</strong></p></li><li><p><strong>方法二</strong><br>直接删除<code>form</code>标签（看下方代码）</p><pre><code class="html">&lt;div class=&quot;box&quot;&gt;  &lt;input type=&quot;text&quot;&gt;  &lt;button type=&quot;button&quot;&gt;提交&lt;/button&gt;&lt;/div&gt;</code></pre><p>删除<code>form</code>标签也会阻止<code>form</code>标签自动提交问题</p></li></ul><p>推荐使用第一种方法</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图片预加载</title>
    <link href="/2020-01-15/advance/"/>
    <url>/2020-01-15/advance/</url>
    
    <content type="html"><![CDATA[<p>图片预加载可以预先加载好网页所需的图片，在网页需要某一张图片时，无需再从服务器请求图片数据，直接从缓存文件中获取所需的图片。 图片预加载，极大的提升了用户体验！</p><p>完整代码贴在了下面，仅供参考！本文预加载只预加载一张图片，每个人都有各自的需求，可以直接复制此处的代码使用，也可以修改后使用！</p><h2 id="引用jQuery库"><a href="#引用jQuery库" class="headerlink" title="引用jQuery库"></a>引用jQuery库</h2><pre><code class="html">&lt;script src=&quot;https://cdn.bootcss.com/jquery/3.4.1/jquery.js&quot;&gt;&lt;/script&gt;</code></pre><h2 id="js代码部分"><a href="#js代码部分" class="headerlink" title="js代码部分"></a>js代码部分</h2><pre><code class="js">/***预加载图片（多往后加载出来一张图片）*///初始化代码var list = [];var a = parseInt(Math.random()*5),    b = parseInt(Math.random()*5);list.push(a, b);// console.log(list.length);var count = 0;var num = parseInt(Math.random()*111);// console.log(&quot;click_num/&quot;+num);// console.log(&quot;click_list/&quot;+list);// console.log(&quot;click_count&quot;+count+&#39;\n---------------------&#39;);// 图片加载函数，图片会在后台默默加载function load() {    var imgObj = new Image();    imgObj.src = &quot;http://say.ganto.xyz/images/&quot;+list[list.length-1]+&quot;.jpg&quot;;}$(&#39;.box&#39;).css(&quot;background-image&quot;,&quot;url(http://say.ganto.xyz/images/&quot;+list[count]+&quot;.jpg)&quot;);load();//点击box$(&#39;.box&#39;).click(function(){    num = parseInt(Math.random()*111);    // console.log(&quot;click_num/&quot;+num);    list.push(num);    // console.log(&quot;click_list/&quot;+list);    count++;    // console.log(&quot;click_count&quot;+count+&#39;\n---------------------&#39;);    $(&#39;.box&#39;).css(&quot;background-image&quot;,&quot;url(http://say.ganto.xyz/images/&quot;+list[count]+&quot;.jpg)&quot;);    load();});//设置定时器setInterval(function(){    num = parseInt(Math.random()*111);    // console.log(&quot;setInterval_num/&quot;+num);    list.push(num);    // console.log(&quot;setInterval_list/&quot;+list);    count++;    // console.log(&quot;setInterval_count&quot;+count+&#39;------------&#39;);    $(&#39;.box&#39;).css(&quot;background-image&quot;,&quot;url(http://say.ganto.xyz/images/&quot;+list[count]+&quot;.jpg)&quot;);    load();},5000);</code></pre><h2 id="html代码部分"><a href="#html代码部分" class="headerlink" title="html代码部分"></a>html代码部分</h2><pre><code class="html">&lt;div class=&quot;box&quot;&gt;    &lt;form&gt;        &lt;input onkeyup=&quot;this.value=this.value.replace(/[^a-z_^0-9]/ig,&#39;&#39;);&quot; placeholder=&quot;输入快递单号&quot;/&gt;        &lt;button type=&quot;button&quot;&gt;查询&lt;/button&gt;    &lt;/form&gt;&lt;/div&gt;</code></pre><h2 id="css代码部分"><a href="#css代码部分" class="headerlink" title="css代码部分"></a>css代码部分</h2><pre><code class="css">*{    margin: 0;    padding: 0;}body{    position: absolute;    top: 0;    right: 0;    bottom: 0;    left: 0;    min-width: 300px;    min-height: 300px;}.box{    width: 100%;    height: 100%;    background-repeat: no-repeat;    background-size: cover;    background-position: center;    transition: all 2s ease;    display: flex;    justify-content: center;    align-items: center;    cursor: pointer;}.box form{    height: 30px;}.box input{    width: 200px;    height: 30px;    border: 0;    outline: none;    background: rgba(255, 255, 255, .8);    padding: 0 10px;    border-radius: 5px;    box-sizing: border-box;    position: relative;    bottom: 1px;}.box button{    display: inline-block;    cursor: pointer;    width: 50px;    height: 30px;    border: 0;    background: rgba(255, 255, 255, .8);    border-radius: 5px;    outline: none;}span{    display: inline-block;    text-align: center;    position: absolute;    border-radius: 10px;    border: 1px dashed white;    bottom: 0;    color: white;    cursor: move;    padding: 10px 20px;}</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>分享</tag>
      
      <tag>预加载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>初识pdf.js - 强大的pdf预览工具</title>
    <link href="/2020-01-09/pdf-js/"/>
    <url>/2020-01-09/pdf-js/</url>
    
    <content type="html"><![CDATA[<h2 id="pdf-js官网"><a href="#pdf-js官网" class="headerlink" title="pdf.js官网"></a>pdf.js官网</h2><p><a href="http://mozilla.github.io/pdf.js/" target="_blank" rel="external nofollow noopener noreferrer">链接在此</a></p><h2 id="超详细步骤"><a href="#超详细步骤" class="headerlink" title="超详细步骤"></a>超详细步骤</h2><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>首先就是访问pdf.js官网</p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>点击官网中的“Download“按钮，将文件下载到本地</p><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><p>将从pdf.js官网下载下来的zip文件解压出来</p><h3 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h3><p>将解压出来的文件全部拷贝到你的整个项目中。我是新建了一个pdf.js文件夹，将解压出来的文件全部放到了这个文件夹里面</p><h3 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h3><p>首先进入web文件夹下打开viewer.js，找到value: ‘XXXXXX-09.pdf’, 这个就是默认的pdf的demo文件，可以直接删除value的值，这样就确保我们可以打开多个pdf文件，删除后保存</p><pre><code class="js">defaultZoomValue: {    value: &#39;&#39;,},</code></pre><h3 id="第六步"><a href="#第六步" class="headerlink" title="第六步"></a>第六步</h3><pre><code class="html">&lt;a href=&quot;../pdf.js/web/viewer.html?file=http://ganto.xyz/study/Advanced mathematics/_0.pdf&quot;&gt;高数预备知识作业_0&lt;/a&gt;</code></pre><p>配置自己项目<br>这里我们用a标签为例，大家可以看到href的内容，前面“../pdf.js/web/viewer.html”是web-&gt;viewer.html这个html文件的路径，然后?file= 后面的“<a href="http://ganto.top/study/Advanced" target="_blank" rel="external nofollow noopener noreferrer">http://ganto.top/study/Advanced</a> mathematics/_0.pdf”就是自己项目中的pdf文件的路径。理解这样写并不难，大家打开web路径下的这个viewer.html文件，是一个空的pdf.js插件提供的一个基于浏览器的pdf阅读器，而a标签中的href的内容大致可以理解为：将pdf文件放到pdf阅读器中打开（浏览）。并且这个阅读器是基于浏览器的，所以就实现了移动端浏览器直接用pdf.js插件提供的pdf阅读器浏览pdf文件的目的！</p><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p><a href="http://ganto.top/study/pdf.js/web/viewer.html?file=http://ganto.top/study/Advanced%20mathematics/_1.pdf" target="_blank" rel="external nofollow noopener noreferrer">http://ganto.top/study/pdf.js/web/viewer.html?file=http://ganto.top/study/Advanced%20mathematics/_1.pdf</a></p><p style="text-align: center">end</p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>分享</tag>
      
      <tag>pdf.js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2000-06-15/hello-world/"/>
    <url>/2000-06-15/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external nofollow noopener noreferrer">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external nofollow noopener noreferrer">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external nofollow noopener noreferrer">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external nofollow noopener noreferrer">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external nofollow noopener noreferrer">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external nofollow noopener noreferrer">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external nofollow noopener noreferrer">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="external nofollow noopener noreferrer">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
