<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>我的博客史</title>
    <link href="/2020/02/18/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%8F%B2/"/>
    <url>/2020/02/18/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%8F%B2/</url>
    
    <content type="html"><![CDATA[<p>你好！欢迎访问我的博客！</p><p>在之前搭建过很多的博客，最终都因那些博客模板的可扩展性不够好、不够美观等各种原因，没能继续使用。</p><p>我还自己写过一些静态博客，但是实际运行起来太复杂了，原理就是写一个首页，然后文章单独放在一个位置，写好一个文章就够复杂的了，写文章也只有手工打代码，并且写完之后，发布上去，还需要手动修改首页内容，我感觉这样的博客虽然是自己写的，有最高的权限，但是很low。</p><p>知道我发现了hexo博客框架，我发现原来博客还能这么玩。</p><p>hexo的优点不必我多说，大家应该都有所耳闻。</p><p>刚一开始我是把博客存放到码云上的，但是最终我用了GitHub…原因就不说了，大家都懂-_-</p><p>以后不出意外的话，也将继续使用hexo写博客，分享我的生活。</p><p>别的也不说了，我们一起进步吧 //^_^//</p><h5 id="我的旧博客"><a href="#我的旧博客" class="headerlink" title="我的旧博客"></a>我的旧博客</h5><h6 id="1-Old-Blog"><a href="#1-Old-Blog" class="headerlink" title="1. Old Blog"></a>1. <a href="http://ganto.top" target="_blank" rel="noopener">Old Blog</a></h6><h6 id="2-码云Blog"><a href="#2-码云Blog" class="headerlink" title="2. 码云Blog"></a>2. <a href="https://ganto_blog.gitee.io/blog" target="_blank" rel="noopener">码云Blog</a></h6>]]></content>
    
    
    <categories>
      
      <category>闲聊</category>
      
      <category>hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决无法访问GitHub</title>
    <link href="/2020/02/18/%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AEGitHub/"/>
    <url>/2020/02/18/%E8%A7%A3%E5%86%B3%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AEGitHub/</url>
    
    <content type="html"><![CDATA[<h2 id="国内用户无法访问GitHub解决办法"><a href="#国内用户无法访问GitHub解决办法" class="headerlink" title="国内用户无法访问GitHub解决办法"></a>国内用户无法访问GitHub解决办法</h2><h6 id="进入电脑此路径C-Windows-System32-drivers-etc，用记事本打开hosts文件，在后面添加一下字段"><a href="#进入电脑此路径C-Windows-System32-drivers-etc，用记事本打开hosts文件，在后面添加一下字段" class="headerlink" title="进入电脑此路径C:\Windows\System32\drivers\etc，用记事本打开hosts文件，在后面添加一下字段"></a>进入电脑此路径C:\Windows\System32\drivers\etc，用记事本打开hosts文件，在后面添加一下字段</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">192.30.253.112 github.com</span><br><span class="line"></span><br><span class="line">192.30.253.119 gist.github.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 assets-cdn.github.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 raw.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 gist.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 cloud.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 camo.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars0.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars1.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars2.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars3.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars4.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars5.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars6.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars7.githubusercontent.com</span><br><span class="line"></span><br><span class="line">151.101.100.133 avatars8.githubusercontent.com</span><br></pre></td></tr></table></figure><p>添加完成后，保存即可，如果被电脑管家检测到风险，选择信任即可！</p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo博客从0到部署到码云</title>
    <link href="/2020/02/18/hexo%E5%8D%9A%E5%AE%A2%E4%BB%8E0%E5%88%B0%E9%83%A8%E7%BD%B2%E5%88%B0%E7%A0%81%E4%BA%91/"/>
    <url>/2020/02/18/hexo%E5%8D%9A%E5%AE%A2%E4%BB%8E0%E5%88%B0%E9%83%A8%E7%BD%B2%E5%88%B0%E7%A0%81%E4%BA%91/</url>
    
    <content type="html"><![CDATA[<h2 id="第一步：我们首先要安装node-js和git"><a href="#第一步：我们首先要安装node-js和git" class="headerlink" title="第一步：我们首先要安装node.js和git"></a>第一步：我们首先要安装node.js和git</h2><p>因为hexo是基于<code>node.js</code>的，所以依赖<code>node.js</code>把md文件生成静态文件html。</p><p>我们是利用<code>git</code>进行对hexo项目操作的，包括把文章部署到码云。</p><p>所以首先要安装<code>node.js</code>、<code>git</code></p><h2 id="第二步：安装并生成hexo默认文件"><a href="#第二步：安装并生成hexo默认文件" class="headerlink" title="第二步：安装并生成hexo默认文件"></a>第二步：安装并生成hexo默认文件</h2><h4 id="1-安装hexo"><a href="#1-安装hexo" class="headerlink" title="1. 安装hexo"></a>1. 安装hexo</h4><p>所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo。</p><p>首先创建一个文件夹为blog，我们右键使用Git Bash Here打开。</p><p>直接运行下方代码，使用 npm进行安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>安装结束后，我们通过以下命令查看版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></table></figure><p>如果出现一下文字，则证明安装hexo成功，这里打印出了各种依赖环境的版本号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Windows_NT 10.0.18363 win32 x64</span><br><span class="line">node: 12.14.1</span><br><span class="line">v8: 7.7.299.13-node.16</span><br><span class="line">uv: 1.33.1</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.15.0</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.40.0</span><br><span class="line">napi: 5</span><br><span class="line">llhttp: 2.0.1</span><br><span class="line">http_parser: 2.8.0</span><br><span class="line">openssl: 1.1.1d</span><br><span class="line">cldr: 35.1</span><br><span class="line">icu: 64.2</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 12.1</span><br></pre></td></tr></table></figure><h4 id="2-新建所需的文件"><a href="#2-新建所需的文件" class="headerlink" title="2. 新建所需的文件"></a>2. 新建所需的文件</h4><p>安装 Hexo 完成后，执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm init myblog &#x2F;&#x2F; 新建所需要的文件</span><br><span class="line">$ cd myblog &#x2F;&#x2F; 进入myblog</span><br><span class="line">$ npm install &#x2F;&#x2F; 同步配置文件</span><br></pre></td></tr></table></figure><p><strong>注意</strong>：在使用<code>$ npm init</code>命令的时候有概率会出现配置环境的问题</p><p>启动hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>然后我们就可以使用 localhost:4000 访问了！</p><h2 id="部署到码云"><a href="#部署到码云" class="headerlink" title="部署到码云"></a>部署到码云</h2><h4 id="码云准备工作"><a href="#码云准备工作" class="headerlink" title="码云准备工作"></a>码云准备工作</h4><p>首先我们需要有一个码云账户</p><p>然后创建一个仓库</p><p>创建仓库的时候一定要选择 <strong><em>使用Readme文件初始化这个仓库</em></strong></p><p>然后进入仓库点击<strong>克隆/下载</strong>，复制<strong>https</strong>地址，如：<a href="https://gitee.com/XXX/XXX.git" target="_blank" rel="noopener">https://gitee.com/XXX/XXX.git</a></p><h4 id="配置-config-yml文件"><a href="#配置-config-yml文件" class="headerlink" title="配置_config.yml文件"></a>配置_config.yml文件</h4><p>打开配置文件，拉到最后，找到<strong>deploy</strong>，这样配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https:&#x2F;&#x2F;gitee.com&#x2F;XXX&#x2F;XXX.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>一点要注意规范，<code>type:</code> <code>repo:</code> <code>branch:</code>后一定要空一格</p><p>然后我们要注意配置文件中的<strong>root:</strong></p><p>默认是<strong>root: /</strong>，我们要修改成<strong>root: <a href="https://ganto_blog.gitee.io/blog/" target="_blank" rel="noopener">https://ganto_blog.gitee.io/blog/</a></strong>或者<strong>root: /blog/</strong></p><h4 id="提交代码到码云仓库"><a href="#提交代码到码云仓库" class="headerlink" title="提交代码到码云仓库"></a>提交代码到码云仓库</h4><p>首先安装 hexo-deployer-git，这是一个插件包，用于提交代码到<strong>码云</strong> / <strong>github</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>执行成功后，会在文件夹中多出一个<strong>.deploy_git</strong>文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>这时会弹出账号密码框，这里的账号密码是码云的账号密码，注意别把名字当成账号，账号一般都是手机号或者邮箱地址</p><p>成功提交代码后，我们会在码云仓库看到我们提交的代码</p><h2 id="搭建后出现的一系列问题"><a href="#搭建后出现的一系列问题" class="headerlink" title="搭建后出现的一系列问题"></a>搭建后出现的一系列问题</h2><ol><li><p>码云Gitee Pages 普通版，每次提交代码后，都需要手动更新 Pages 服务（重启 Pages 服务），可以免费使用一个月pro版，坑</p></li><li><p>在博客中有时候加载jQuery包的路径无法访问，我们需要修改jQuery包路径，这个问题好像只有默认landscape主题有,如果真的存在这种问题的话，可以进入themes\landscape\layout_partial，找到after-footer.ejs打开，把引用的包改成其他可以访问的即可，不可以改成http地址包</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;&#x2F;&#x2F;cdn.bootcss.com&#x2F;jquery&#x2F;3.4.1&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</title>
    <link href="/2020/02/18/hexo-clean-hexo-g-hexo-d/"/>
    <url>/2020/02/18/hexo-clean-hexo-g-hexo-d/</url>
    
    <content type="html"><![CDATA[<h2 id="hexo-clean-amp-amp-hexo-g-amp-amp-hexo-d"><a href="#hexo-clean-amp-amp-hexo-g-amp-amp-hexo-d" class="headerlink" title="$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d"></a>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</h2><h6 id="git上传码云代码，第一次上传路径有问题，第二次覆盖上传，即便路径修改对了（码云源码都正确了），访问网页还是路径错误，你必须得从新建库，重新上传才行，要不然那个错误将永远留在那里，我是真搞不懂为什么会这样"><a href="#git上传码云代码，第一次上传路径有问题，第二次覆盖上传，即便路径修改对了（码云源码都正确了），访问网页还是路径错误，你必须得从新建库，重新上传才行，要不然那个错误将永远留在那里，我是真搞不懂为什么会这样" class="headerlink" title="git上传码云代码，第一次上传路径有问题，第二次覆盖上传，即便路径修改对了（码云源码都正确了），访问网页还是路径错误，你必须得从新建库，重新上传才行，要不然那个错误将永远留在那里，我是真搞不懂为什么会这样"></a>git上传码云代码，第一次上传路径有问题，第二次覆盖上传，即便路径修改对了（码云源码都正确了），访问网页还是路径错误，你必须得从新建库，重新上传才行，要不然那个错误将永远留在那里，我是真搞不懂为什么会这样</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这个问题我知道因为什么了，因为需要更新码云中的 Pages 服务，就是重启一下，这其实很不方便</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/02/18/hello-world/"/>
    <url>/2020/02/18/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
